{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\OnlineMarketplace\\\\OnlineMarketplace\\\\OnlineMarketplace\\\\ClientApp\\\\src\\\\components\\\\StartStream.js\";\nimport * as signalR from \"@microsoft/signalr\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StartStream extends React.Component {\n  componentDidMount() {\n    // Create the SignalR connection\n    this.connection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5000/streaminghub\").build(); // Start the connection\n\n    this.connection.start().catch(err => console.error(err.toString())); // Get a reference to the video and canvas elements\n\n    this.videoElement = document.getElementById(\"video\");\n    this.canvasElement = document.getElementById(\"canvas\");\n    this.context = this.canvasElement.getContext(\"2d\"); // Ask the user for permission to access the webcam\n\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      // Attach the video stream to the video element\n      this.videoElement.srcObject = stream; // Start the video stream loop\n\n      this.startStreaming();\n    });\n  }\n\n  startStreaming() {\n    // Draw and send a video frame to the server every 1000 / 30 milliseconds\n    setInterval(() => {\n      this.context.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\n      const frame = this.context.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\n      this.connection.send(\"SendVideoFrame\", frame);\n    }, 1000 / 30); // 30 FPS\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        width: \"640\",\n        height: \"480\",\n        autoplay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        width: \"640\",\n        height: \"480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["signalR","React","StartStream","Component","componentDidMount","connection","HubConnectionBuilder","withUrl","build","start","catch","err","console","error","toString","videoElement","document","getElementById","canvasElement","context","getContext","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","startStreaming","setInterval","drawImage","width","height","frame","getImageData","send","render"],"sources":["H:/Projects/OnlineMarketplace/OnlineMarketplace/OnlineMarketplace/ClientApp/src/components/StartStream.js"],"sourcesContent":["import * as signalR from \"@microsoft/signalr\";\r\nimport React from \"react\";\r\n\r\nexport default class StartStream extends React.Component {\r\n  componentDidMount() {\r\n    // Create the SignalR connection\r\n    this.connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(\"http://localhost:5000/streaminghub\")\r\n      .build();\r\n\r\n    // Start the connection\r\n    this.connection.start().catch(err => console.error(err.toString()));\r\n\r\n    // Get a reference to the video and canvas elements\r\n    this.videoElement = document.getElementById(\"video\");\r\n    this.canvasElement = document.getElementById(\"canvas\");\r\n    this.context = this.canvasElement.getContext(\"2d\");\r\n\r\n    // Ask the user for permission to access the webcam\r\n    navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n      // Attach the video stream to the video element\r\n      this.videoElement.srcObject = stream;\r\n\r\n      // Start the video stream loop\r\n      this.startStreaming();\r\n    });\r\n  }\r\n\r\n  startStreaming() {\r\n    // Draw and send a video frame to the server every 1000 / 30 milliseconds\r\n    setInterval(() => {\r\n      this.context.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\r\n      const frame = this.context.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\r\n      this.connection.send(\"SendVideoFrame\", frame);\r\n    }, 1000 / 30); // 30 FPS\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <video id=\"video\" width=\"640\" height=\"480\" autoplay></video>\r\n        <canvas id=\"canvas\" width=\"640\" height=\"480\"></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;EACvDC,iBAAiB,GAAG;IAClB;IACA,KAAKC,UAAL,GAAkB,IAAIL,OAAO,CAACM,oBAAZ,GACfC,OADe,CACP,oCADO,EAEfC,KAFe,EAAlB,CAFkB,CAMlB;;IACA,KAAKH,UAAL,CAAgBI,KAAhB,GAAwBC,KAAxB,CAA8BC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,QAAJ,EAAd,CAArC,EAPkB,CASlB;;IACA,KAAKC,YAAL,GAAoBC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApB;IACA,KAAKC,aAAL,GAAqBF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAArB;IACA,KAAKE,OAAL,GAAe,KAAKD,aAAL,CAAmBE,UAAnB,CAA8B,IAA9B,CAAf,CAZkB,CAclB;;IACAC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;MAAEC,KAAK,EAAE;IAAT,CAApC,EAAqDC,IAArD,CAA0DC,MAAM,IAAI;MAClE;MACA,KAAKX,YAAL,CAAkBY,SAAlB,GAA8BD,MAA9B,CAFkE,CAIlE;;MACA,KAAKE,cAAL;IACD,CAND;EAOD;;EAEDA,cAAc,GAAG;IACf;IACAC,WAAW,CAAC,MAAM;MAChB,KAAKV,OAAL,CAAaW,SAAb,CAAuB,KAAKf,YAA5B,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,KAAKG,aAAL,CAAmBa,KAAnE,EAA0E,KAAKb,aAAL,CAAmBc,MAA7F;MACA,MAAMC,KAAK,GAAG,KAAKd,OAAL,CAAae,YAAb,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,KAAKhB,aAAL,CAAmBa,KAAnD,EAA0D,KAAKb,aAAL,CAAmBc,MAA7E,CAAd;MACA,KAAK3B,UAAL,CAAgB8B,IAAhB,CAAqB,gBAArB,EAAuCF,KAAvC;IACD,CAJU,EAIR,OAAO,EAJC,CAAX,CAFe,CAMA;EAChB;;EAEDG,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAO,EAAE,EAAC,OAAV;QAAkB,KAAK,EAAC,KAAxB;QAA8B,MAAM,EAAC,KAArC;QAA2C,QAAQ;MAAnD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,EAAE,EAAC,QAAX;QAAoB,KAAK,EAAC,KAA1B;QAAgC,MAAM,EAAC;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAzCsD"},"metadata":{},"sourceType":"module"}