{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\OnlineMarketplace\\\\OnlineMarketplace\\\\OnlineMarketplace\\\\ClientApp\\\\src\\\\components\\\\StartStream.js\";\nimport LiveStream from \"./LiveStream\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StartStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoElement = /*#__PURE__*/React.createRef();\n    this.liveStream = new LiveStream();\n  }\n\n  componentDidMount() {\n    // Set up the webcam stream\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      this.videoElement.current.srcObject = stream;\n    }); // Set up a timer to send new frames to the server every 100 milliseconds\n\n    this.timer = setInterval(() => {\n      this.sendFrame();\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    // Stop the timer when the component is unmounted\n    clearInterval(this.timer);\n  }\n\n  sendFrame() {\n    // Capture a frame from the webcam\n    const context = this.canvas.getContext(\"2d\");\n    context.drawImage(this.videoElement.current, 0, 0, this.canvas.width, this.canvas.height);\n    const frameData = context.getImageData(0, 0, this.canvas.width, this.canvas.height).data.buffer; // Send the frame to the server\n\n    this.liveStream.sendFrame(frameData);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvas => this.canvas = canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["LiveStream","React","StartStream","Component","constructor","props","videoElement","createRef","liveStream","componentDidMount","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","timer","setInterval","sendFrame","componentWillUnmount","clearInterval","context","canvas","getContext","drawImage","width","height","frameData","getImageData","data","buffer","render"],"sources":["H:/Projects/OnlineMarketplace/OnlineMarketplace/OnlineMarketplace/ClientApp/src/components/StartStream.js"],"sourcesContent":["import LiveStream from \"./LiveStream\";\r\nimport React from \"react\";\r\n\r\nexport default class StartStream extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoElement = React.createRef();\r\n        this.liveStream = new LiveStream();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set up the webcam stream\r\n        navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n            this.videoElement.current.srcObject = stream;\r\n        });\r\n\r\n        // Set up a timer to send new frames to the server every 100 milliseconds\r\n        this.timer = setInterval(() => {\r\n            this.sendFrame();\r\n        }, 100);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Stop the timer when the component is unmounted\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    sendFrame() {\r\n        // Capture a frame from the webcam\r\n        const context = this.canvas.getContext(\"2d\");\r\n        context.drawImage(this.videoElement.current, 0, 0, this.canvas.width, this.canvas.height);\r\n        const frameData = context.getImageData(0, 0, this.canvas.width, this.canvas.height).data.buffer;\r\n\r\n        // Send the frame to the server\r\n        this.liveStream.sendFrame(frameData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video ref={this.videoElement} />\r\n                <canvas ref={canvas => this.canvas = canvas} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;EACrDC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,YAAL,gBAAoBL,KAAK,CAACM,SAAN,EAApB;IACA,KAAKC,UAAL,GAAkB,IAAIR,UAAJ,EAAlB;EACH;;EAEDS,iBAAiB,GAAG;IAChB;IACAC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;MAAEC,KAAK,EAAE;IAAT,CAApC,EAAqDC,IAArD,CAA0DC,MAAM,IAAI;MAChE,KAAKT,YAAL,CAAkBU,OAAlB,CAA0BC,SAA1B,GAAsCF,MAAtC;IACH,CAFD,EAFgB,CAMhB;;IACA,KAAKG,KAAL,GAAaC,WAAW,CAAC,MAAM;MAC3B,KAAKC,SAAL;IACH,CAFuB,EAErB,GAFqB,CAAxB;EAGH;;EAEDC,oBAAoB,GAAG;IACnB;IACAC,aAAa,CAAC,KAAKJ,KAAN,CAAb;EACH;;EAEDE,SAAS,GAAG;IACR;IACA,MAAMG,OAAO,GAAG,KAAKC,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAhB;IACAF,OAAO,CAACG,SAAR,CAAkB,KAAKpB,YAAL,CAAkBU,OAApC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,KAAKQ,MAAL,CAAYG,KAA/D,EAAsE,KAAKH,MAAL,CAAYI,MAAlF;IACA,MAAMC,SAAS,GAAGN,OAAO,CAACO,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAAKN,MAAL,CAAYG,KAAvC,EAA8C,KAAKH,MAAL,CAAYI,MAA1D,EAAkEG,IAAlE,CAAuEC,MAAzF,CAJQ,CAMR;;IACA,KAAKxB,UAAL,CAAgBY,SAAhB,CAA0BS,SAA1B;EACH;;EAEDI,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAO,GAAG,EAAE,KAAK3B;MAAjB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,GAAG,EAAEkB,MAAM,IAAI,KAAKA,MAAL,GAAcA;MAArC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;AA1CoD"},"metadata":{},"sourceType":"module"}